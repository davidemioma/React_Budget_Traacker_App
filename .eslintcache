[{"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/index.js":"1","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/App.js":"2","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Details/Details.jsx":"3","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/Main.jsx":"4","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/Form/Form.jsx":"5","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/constants/categories.js":"6","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/List/List.jsx":"7","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/store/expense-Redux.js":"8","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/store/expense-Slice.js":"9","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/utils/formatDate.js":"10","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/useTransactions.js":"11","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/SnackBar/SnackBar.jsx":"12","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/InfoCard.jsx":"13"},{"size":437,"mtime":1647785851877,"results":"14","hashOfConfig":"15"},{"size":733,"mtime":1647871851247,"results":"16","hashOfConfig":"15"},{"size":551,"mtime":1647732376405,"results":"17","hashOfConfig":"15"},{"size":863,"mtime":1647870335739,"results":"18","hashOfConfig":"15"},{"size":4695,"mtime":1647869709215,"results":"19","hashOfConfig":"15"},{"size":1710,"mtime":1647642684434,"results":"20","hashOfConfig":"15"},{"size":1351,"mtime":1647696970406,"results":"21","hashOfConfig":"15"},{"size":253,"mtime":1647694703091,"results":"22","hashOfConfig":"15"},{"size":1087,"mtime":1647789382966,"results":"23","hashOfConfig":"15"},{"size":316,"mtime":1647698953307,"results":"24","hashOfConfig":"15"},{"size":1048,"mtime":1647732538399,"results":"25","hashOfConfig":"15"},{"size":781,"mtime":1647869747189,"results":"26","hashOfConfig":"15"},{"size":452,"mtime":1647870418210,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18vfwh5",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/index.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/App.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Details/Details.jsx",[],["57","58"],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/Main.jsx",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/Form/Form.jsx",["59","60"],"import React, { useEffect, useState } from \"react\";\nimport { Select, MenuItem, InputLabel, TextField } from \"@material-ui/core\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport { formatDate } from \"../../../utils/formatDate\";\nimport { useDispatch } from \"react-redux\";\nimport { expenseActions } from \"../../../store/expense-Redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport SnackBar from \"../../SnackBar/SnackBar\";\nimport classes from \"./Form.module.css\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const [open, setOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState(initialState);\n\n  const seletedCategory =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  const { segment } = useSpeechContext();\n\n  const createTransaction = () => {\n    if (\n      !formData.type ||\n      !formData.category ||\n      Number.isNaN(Number(formData.amount)) ||\n      !formData.date.includes(\"-\")\n    )\n      return;\n\n    setOpen(true);\n\n    dispatch(\n      expenseActions.addTransaction({\n        ...formData,\n        amount: Number(formData.amount),\n        id: uuidv4(),\n      })\n    );\n\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.map((e) => {\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (e.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: e.value });\n            break;\n\n          case \"category\":\n            if (incomeCategories.map((ic) => ic.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category });\n            } else if (\n              expenseCategories.map((ec) => ec.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category });\n            }\n            break;\n\n          case \"date\":\n            setFormData({ ...formData, date: e.value });\n            break;\n\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.type &&\n        formData.amount &&\n        formData.category &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  return (\n    <div className={classes.form}>\n      <SnackBar open={open} setOpen={setOpen} />\n\n      <div className={classes.speech}>\n        {segment && segment.words.map((w) => w.value).join(\" \")}\n      </div>\n\n      <div className={classes.select}>\n        <div>\n          <InputLabel>Type</InputLabel>\n\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </div>\n\n        <div>\n          <InputLabel>Category</InputLabel>\n\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {seletedCategory.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n      </div>\n\n      <div className={classes.input}>\n        <TextField\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n        />\n\n        <TextField\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n          type=\"Date\"\n          label=\"date\"\n          fullWidth\n        />\n      </div>\n\n      <button type=\"button\" className={classes.btn} onClick={createTransaction}>\n        Create\n      </button>\n    </div>\n  );\n};\n\nexport default Form;\n","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/constants/categories.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/List/List.jsx",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/store/expense-Redux.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/store/expense-Slice.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/utils/formatDate.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/useTransactions.js",[],"/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/SnackBar/SnackBar.jsx",["61"],"import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport classes from \"./SnackBar.module.css\";\n\nconst SnackBar = ({ open, setOpen }) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          onClose={handleClose}\n          severity=\"success\"\n          elevation={6}\n          variant=\"filled\"\n        >\n          Transaction successfully created.\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default SnackBar;\n","/Users/emiomadavid/Desktop/Uche/React/React_Budget_Tracker_App/src/components/Main/InfoCard.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":74,"column":32,"nodeType":"68","messageId":"69","endLine":74,"endColumn":34},{"ruleId":"70","severity":1,"message":"71","line":113,"column":6,"nodeType":"72","endLine":113,"endColumn":15,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["80"],"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"83","text":"84"},[2970,2979],"[createTransaction, formData, segment]"]